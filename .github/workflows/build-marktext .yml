# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events
    - cron: "0 0 * * *"

  
env:
  GCI:  git-commit-info.txt

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # https://github.com/marktext/marktext/actions/runs/1539033367/workflow
  build-windows:
    runs-on: windows-latest
    continue-on-error: false
    timeout-minutes: 60

    env:
      # MARKTEXT_IS_STABLE: 1
      MARKTEXT_EXIT_ON_ERROR: 1
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
         repository: 'marktext/marktext' 
      
      - name: Get latest commit
        shell: pwsh
        run: |
          git log --pretty=format:"%cd|||%cn|||%s" -1 --date=unix > ${{env.GCI}}

      - name: 上传git提交信息
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.GCI}}
          path: ${{env.GCI}}

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
#          node-version: 14
          check-latest: true
          cache: yarn
          cache-dependency-path: yarn.lock

      # Workaround: Fix native build failure due to outdated node-gyp version.
      - name: Fix node-gyp
        run: |
          npm install --global node-gyp@latest
          npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
          node-gyp install
        shell: pwsh

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cacheNodeModules
        with:
          path: ${{ github.workspace }}\node_modules
          key: ${{ runner.os }}-node_modules-cache-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-node_modules-cache-
      - name: Cache Electron
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron\Cache
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}

      - name: Cache Electron-Builder
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron-builder\cache
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}

      - name: Install dependencies
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: yarn install --check-files --frozen-lockfile
#      - name: Lint
#        run: |
#          yarn run lint
#          yarn run validate-licenses
      - name: Build
        run: yarn build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: exe-file
          path: |
            build/**/*.exe
  parse-artifacts:
    runs-on: ubuntu-latest
    needs: build-windows
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ./
      - run: |
           ls -lshR
           log=$(cat */${{env.GCI}})
           timestamp=$(echo $log | grep -o '^[0-9]\+')
           # 转换到中国时间
           china=$(($timestamp + 28800))
           dateTime=$(date --date="@$china" +"%Y-%m-%d %H:%M:%S")
           dateTimeFileName=$(date --date="@$china" +"%Y-%m-%d_%H.%M.%S")
           echo "GIT_COMMIT_DATE_TIME_FILE_NAME=$dateTimeFileName" >> $GITHUB_ENV
           now=$(date +%s)
           now=$(($now + 28800))
           echo "TIME_STAMP=$(date --date="@$now" +%Y-%m-%d_%H.%M.%S)" >> $GITHUB_ENV
           echo "GIT_COMMIT_INFO=$log" >> $GITHUB_ENV
           echo -e "$dateTime \n $log" > CHANGELOG.txt
           #sudo apt update
           #sudo apt install -y upx
           #find -name *.exe -exec upx -9 "{}" \;
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.GIT_COMMIT_DATE_TIME_FILE_NAME}}_${{env.TIME_STAMP}}
          body_path: CHANGELOG.txt
          files: |
            **/*.exe
